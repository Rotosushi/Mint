// Copyright (C) 2023 Cade Weinberg
// 
// This file is part of Mint.
// 
// Mint is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// Mint is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with Mint.  If not, see <http://www.gnu.org/licenses/>.

adt/ 
is where I have been placing classes which have a 
single resposibility within the compiler.
(the name is kinda meaningless at this point,
but it stands for algebraic data type.)

ast/ 
is for the abstract syntax tree of the compiler.

codegen/
is for the free functions which generate llvm IR

core/ 
is for the main driver functions of the compiler 

ir/ 
is for the intermediate representation of the compiler 

scan/ 
is for the scanner and parser which build the ast.

type/ 
is for the types understood by the compiler.

utility/
if for free functions which are program utilities

-----------------------------------------------------------------------------------
#TODO: refactor the project directory (and correspondingly the object files
created by cmake within each directory):

common/
common/adt/
common/ast/
common/ir/
common/type/
common/utility/

core/

scan/

typecheck/
evaluate/

codegen/
