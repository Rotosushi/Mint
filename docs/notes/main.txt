// Copyright (C) 2023 Cade Weinberg
// 
// This file is part of Mint.
// 
// Mint is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// Mint is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with Mint.  If not, see <http://www.gnu.org/licenses/>.


How is main handled?

It is my inclination to specify that main is a function call main 
which is declared once and only once at global scope.

mint assumes that when given an input file, it's goal is to create 
an exectuable. unless told to create a static or shared library.

the next question to ask is how do we produce an exectuable?

well, for a single file it looks like:

input_file -> compile -> object_file -> link -> exectuable 

for multiple files it looks nearly identical

input_files -> for each {compile} -> object_files -> link {all} -> executable

the only difference is that each input file is turned into an object file,
then all of these object files are given to the linker
